<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>SmartPutty</groupId>
	<artifactId>SmartPutty</artifactId>
	<version>1.1.20</version>
	<properties>
		<ch.qos.logback.version>1.2.3</ch.qos.logback.version>
		<cn.hutool.version>5.5.7</cn.hutool.version>
		<commons-codec.version>1.15</commons-codec.version>
		<commons-io.version>2.7</commons-io.version>
		<commons-net.version>3.7</commons-net.version>
		<junit.version>4.13</junit.version>
		<org.apache.commons.version>3.11</org.apache.commons.version>
		<org.eclipse.swt.version>4.3</org.eclipse.swt.version>
		<org.hsqldb.version>2.5.1</org.hsqldb.version>
		<org.mod4j.org.eclipse.version>3.5.0</org.mod4j.org.eclipse.version>
		<org.projectlombok.version>1.18.12</org.projectlombok.version>
		<guava.version>29.0-jre</guava.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${ch.qos.logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${ch.qos.logback.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>${commons-net.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${org.apache.commons.version}</version>
		</dependency>
		<!-- Cannot load 32-bit SWT libraries on 64-bit JVM 根据jdk版本修改配置 -->
		<dependency>
			<groupId>org.eclipse.swt</groupId>
			<artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
			<!-- <artifactId>org.eclipse.swt.win32.win32.x86</artifactId> -->
			<version>${org.eclipse.swt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${org.hsqldb.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mod4j.org.eclipse</groupId>
			<artifactId>jface</artifactId>
			<version>${org.mod4j.org.eclipse.version}</version>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${cn.hutool.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
		</dependency>
	</dependencies>
	<build>
		<!-- 输出的包名 -->
		<finalName>SmartPutty</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<!-- 控制资源文件的拷贝(默认复制到classes目录，最后打进jar包) -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<!-- 配置文件外置的资源(存放到config目录，也是classpath路径，下面会配置) -->
		</resources>
		<plugins>
			<!-- 设置编译版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<!-- 清单文件，设置入口类和classpath -->
						<manifest>
							<mainClass>ui.MainFrame</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
					<classesDirectory></classesDirectory>
				</configuration>
			</plugin>
			<!-- 拷贝依赖的jar包到lib目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory> ${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 解决资源文件的编码问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 自定义打zip包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.5</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<!-- 默认绑定阶段initialize -->
						<phase>initialize</phase>
						<goals>
							<!-- 目标：revision -->
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 检查的仓库根目录，${project.basedir}：项目根目录，即包含pom.xml文件的目录 -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<!-- false：扫描路径时不打印更多信息，默认值false，可以不配置 -->
					<verbose>false</verbose>
					<!-- 定义插件中所有时间格式，默认值：yyyy-MM-dd’T’HH:mm:ssZ -->
					<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
					<!-- git属性文件中各属性前缀，默认值git，可以不配置 -->
					<prefix>git</prefix>
					<!-- 生成git属性文件，默认false：不生成 -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<!-- 生成git属性文件路径及文件名，默认${project.build.outputDirectory}/git.properties -->
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<!-- 生成git属性文件格式，默认值properties -->
					<format>json</format>
					<!-- 配置git-describe命令 -->
					<gitDescribe>
						<skip>false</skip>
						<always>false</always>
						<dirty>-dirty</dirty>
					</gitDescribe>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>